$ init related features $

\begin_init 
#registers quantum = 3            
#registers classical = 3
#iters = 1000
#set quantum states -> {(1,0), (1,0)}, {1,0}, {(1,0), (1,0)}
#set classical states -> 0, 0, 0

block Y3 (p,q,r)
[
    Y-> p
    Y-> q
    Y-> r
]

block X_even (i,p) -> p
[
    condition(i % 2 == 0) {                 $ issue with modulo $
        X -> p
    }
]


gate S =[[(1 , 0), (0, 0)],
         [(0 , 0), (0, 1)]] 

gate Test = [[1,2],[2,3]]

\end_init

\begin_main

\end_main


\begin_output
    int i = 0
    int x = 9
    int aaa = 10000
    int j = 110200
    int s =12323423

    s = i+(((x*i)+i)-(aaa))
    condition(j < s){
        int x = 10
        echo(i,"The value of x is: ",x," ",aaa)
    }
    otherwise((i == x)){
        int xu = 999
        echo(j,"The value of x is: ",x," ",s)
        list[int] list_ex = [1,2,3,4234,235,234] 
    }
    otherwise{
        int y = 0
        s = s + 1
        complex t = (1,2)
    }

\end_output