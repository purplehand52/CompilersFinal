\begin_init
    #registers quantum = 4
    #registers classical = 4
    #iters = 1000

    #set classical states -> 0,0,0,0
    #set quantum states -> {1,0}, {1,0}, {1,0},{1,0}

    block BellGen (i, j) -> j [
        $ Start with Hadamard $
        H -> i
        $ Apply C-X $
        X : i -> j
    ]

    block BellGen2 (i,j,k) -> (j,g) [
        $ Start with Hadamard $
        H -> i
        $ Apply C-X $
        X : i -> j
    ]


\end_init

\begin_main
    BellGen (1, 2)
    H -> 0
    1 ? X : (0,1,2) -> 3

    0 ? BellGen2 (1,2,3) -> (2,3)


    for_zip (i,j) in (0:2,2:4){
        H: i->j
    }

    measure : 0 -> 1


\end_main

\begin_output
    $
    matrix a = [[1, 2], [3, 4]]
    matrix b = [[4, 5], [6, (7, 8)]]
    matrix c = a @ b

    uint t = c_output[0] * c_output[1] * c_output[2]

    state f = q_output[1]
    $
    
\end_output